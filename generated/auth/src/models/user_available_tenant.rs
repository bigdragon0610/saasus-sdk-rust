/*
 * SaaSus Auth API Schema
 *
 * スキーマ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserAvailableTenant {
    #[serde(rename = "id")]
    pub id: String,
    /// テナント名(tenant name)
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "completed_sign_up")]
    pub completed_sign_up: bool,
    /// 環境情報、役割(ロール)情報(environmental info, role info)
    #[serde(rename = "envs")]
    pub envs: Vec<crate::models::UserAvailableEnv>,
    /// ユーザー追加属性(user additional attributes)
    #[serde(rename = "user_attribute")]
    pub user_attribute: ::std::collections::HashMap<String, serde_json::Value>,
    /// バックオフィス担当者のメール(back office contact email)
    #[serde(rename = "back_office_staff_email")]
    pub back_office_staff_email: String,
    #[serde(rename = "plan_id", skip_serializing_if = "Option::is_none")]
    pub plan_id: Option<String>,
    /// テナントの支払い状況(tenant payment status)  ※ 現在はストライプ連携時のみ返却されます。Currently, it is returned only when stripe is linked. 
    #[serde(rename = "is_paid", skip_serializing_if = "Option::is_none")]
    pub is_paid: Option<bool>,
}

impl UserAvailableTenant {
    pub fn new(id: String, name: String, completed_sign_up: bool, envs: Vec<crate::models::UserAvailableEnv>, user_attribute: ::std::collections::HashMap<String, serde_json::Value>, back_office_staff_email: String) -> UserAvailableTenant {
        UserAvailableTenant {
            id,
            name,
            completed_sign_up,
            envs,
            user_attribute,
            back_office_staff_email,
            plan_id: None,
            is_paid: None,
        }
    }
}


