/*
 * SaaSus Auth API Schema
 *
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ProrationBehavior : If you have a strine linkage, you can set the behavior of the proportional allocation when changing plans. When a plan is changed, you can set whether to prorate the billing amount and reflect it on the next invoice, to issue a prorated invoice immediately, or not to prorate at all. 

/// If you have a strine linkage, you can set the behavior of the proportional allocation when changing plans. When a plan is changed, you can set whether to prorate the billing amount and reflect it on the next invoice, to issue a prorated invoice immediately, or not to prorate at all. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProrationBehavior {
    #[serde(rename = "create_prorations")]
    CreateProrations,
    #[serde(rename = "none")]
    None,
    #[serde(rename = "always_invoice")]
    AlwaysInvoice,

}

impl ToString for ProrationBehavior {
    fn to_string(&self) -> String {
        match self {
            Self::CreateProrations => String::from("create_prorations"),
            Self::None => String::from("none"),
            Self::AlwaysInvoice => String::from("always_invoice"),
        }
    }
}

impl Default for ProrationBehavior {
    fn default() -> ProrationBehavior {
        Self::CreateProrations
    }
}




