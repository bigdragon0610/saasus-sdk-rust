/*
 * SaaSus Auth API Schema
 *
 * スキーマ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationMessages {
    #[serde(rename = "sign_up")]
    pub sign_up: Box<crate::models::MessageTemplate>,
    #[serde(rename = "create_user")]
    pub create_user: Box<crate::models::MessageTemplate>,
    #[serde(rename = "resend_code")]
    pub resend_code: Box<crate::models::MessageTemplate>,
    #[serde(rename = "forgot_password")]
    pub forgot_password: Box<crate::models::MessageTemplate>,
    #[serde(rename = "update_user_attribute")]
    pub update_user_attribute: Box<crate::models::MessageTemplate>,
    #[serde(rename = "verify_user_attribute")]
    pub verify_user_attribute: Box<crate::models::MessageTemplate>,
    #[serde(rename = "authentication_mfa")]
    pub authentication_mfa: Box<crate::models::MessageTemplate>,
    #[serde(rename = "invite_tenant_user")]
    pub invite_tenant_user: Box<crate::models::MessageTemplate>,
    #[serde(rename = "verify_external_user")]
    pub verify_external_user: Box<crate::models::MessageTemplate>,
}

impl NotificationMessages {
    pub fn new(sign_up: crate::models::MessageTemplate, create_user: crate::models::MessageTemplate, resend_code: crate::models::MessageTemplate, forgot_password: crate::models::MessageTemplate, update_user_attribute: crate::models::MessageTemplate, verify_user_attribute: crate::models::MessageTemplate, authentication_mfa: crate::models::MessageTemplate, invite_tenant_user: crate::models::MessageTemplate, verify_external_user: crate::models::MessageTemplate) -> NotificationMessages {
        NotificationMessages {
            sign_up: Box::new(sign_up),
            create_user: Box::new(create_user),
            resend_code: Box::new(resend_code),
            forgot_password: Box::new(forgot_password),
            update_user_attribute: Box::new(update_user_attribute),
            verify_user_attribute: Box::new(verify_user_attribute),
            authentication_mfa: Box::new(authentication_mfa),
            invite_tenant_user: Box::new(invite_tenant_user),
            verify_external_user: Box::new(verify_external_user),
        }
    }
}


