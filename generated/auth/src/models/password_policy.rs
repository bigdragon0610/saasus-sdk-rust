/*
 * SaaSus Auth API Schema
 *
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PasswordPolicy : Password Policy



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PasswordPolicy {
    /// Minimum number of characters
    #[serde(rename = "minimum_length")]
    pub minimum_length: i32,
    /// Contains one or more lowercase characters
    #[serde(rename = "is_require_lowercase")]
    pub is_require_lowercase: bool,
    /// Contains one or more numeric characters
    #[serde(rename = "is_require_numbers")]
    pub is_require_numbers: bool,
    /// Contains one or more special characters
    #[serde(rename = "is_require_symbols")]
    pub is_require_symbols: bool,
    /// Contains one or more uppercase letters
    #[serde(rename = "is_require_uppercase")]
    pub is_require_uppercase: bool,
    /// Temporary password expiration date
    #[serde(rename = "temporary_password_validity_days")]
    pub temporary_password_validity_days: i32,
}

impl PasswordPolicy {
    /// Password Policy
    pub fn new(minimum_length: i32, is_require_lowercase: bool, is_require_numbers: bool, is_require_symbols: bool, is_require_uppercase: bool, temporary_password_validity_days: i32) -> PasswordPolicy {
        PasswordPolicy {
            minimum_length,
            is_require_lowercase,
            is_require_numbers,
            is_require_symbols,
            is_require_uppercase,
            temporary_password_validity_days,
        }
    }
}


