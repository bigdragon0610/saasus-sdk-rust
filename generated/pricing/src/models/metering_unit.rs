/*
 * SaaSus Pricing API Schema
 *
 * SaaSus Pricing API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MeteringUnit {
    /// Metering unit name
    #[serde(rename = "unit_name")]
    pub unit_name: String,
    #[serde(rename = "aggregate_usage", skip_serializing_if = "Option::is_none")]
    pub aggregate_usage: Option<crate::models::AggregateUsage>,
    /// Display name
    #[serde(rename = "display_name")]
    pub display_name: String,
    /// Description
    #[serde(rename = "description")]
    pub description: String,
    /// Universally Unique Identifier
    #[serde(rename = "id")]
    pub id: String,
    /// Metering unit used settings
    #[serde(rename = "used")]
    pub used: bool,
}

impl MeteringUnit {
    pub fn new(unit_name: String, display_name: String, description: String, id: String, used: bool) -> MeteringUnit {
        MeteringUnit {
            unit_name,
            aggregate_usage: None,
            display_name,
            description,
            id,
            used,
        }
    }
}


