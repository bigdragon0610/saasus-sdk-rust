/*
 * SaaSus Communication API Schema
 *
 * SaaSus Communication API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Feedback {
    #[serde(rename = "feedback_title")]
    pub feedback_title: String,
    #[serde(rename = "feedback_description")]
    pub feedback_description: String,
    #[serde(rename = "comments")]
    pub comments: Vec<crate::models::Comment>,
    #[serde(rename = "count")]
    pub count: i32,
    #[serde(rename = "users")]
    pub users: Vec<crate::models::User>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "user_id")]
    pub user_id: String,
    #[serde(rename = "created_at")]
    pub created_at: i32,
    #[serde(rename = "status")]
    pub status: i32,
}

impl Feedback {
    pub fn new(feedback_title: String, feedback_description: String, comments: Vec<crate::models::Comment>, count: i32, users: Vec<crate::models::User>, id: String, user_id: String, created_at: i32, status: i32) -> Feedback {
        Feedback {
            feedback_title,
            feedback_description,
            comments,
            count,
            users,
            id,
            user_id,
            created_at,
            status,
        }
    }
}


